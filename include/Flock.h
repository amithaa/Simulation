/// \file Flock.h
/// \brief
/// \author Amitha Arun
/// \date

#ifndef _FLOCK_H
#define _FLOCK_H
#include <vector>
#include "Boid.h"
#include <ngl/Camera.h>



class Flock
{
  public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Constructor for Flock
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  Flock();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief dtor
  //----------------------------------------------------------------------------------------------------------------------
  ~Flock();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Constructor for Flock
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  bool initialize();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Constructor for Flock
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  void set_boid();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Draw the boids
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  void drawBoid();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief set method for camera
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  inline void setCam(ngl::Camera *_cam){m_cam=_cam;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief get method for camera
  //----------------------------------------------------------------------------------------------------------------------
  inline ngl::Camera * getCam()const {return m_cam;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief find the neighbours
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  void findNeighbours(Boid b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief find the velocity after centering force is applied
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 boidCohesion(Boid *b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief find the velocity after separation force is applied
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 boidSeparation(Boid *b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief find the velocity after alignment force is applied
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 boidAlignment(Boid *b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief limit the velocity of the boids
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  void boidLimitVelocity(Boid *b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief add a bounding box around the boids
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  void boundingBox(Boid *b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief tend towards a particular place
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 tendToPlace(Boid *b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief damping force
  /// @param[in]
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 dampingForce(Boid *b);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief array of boids
  //----------------------------------------------------------------------------------------------------------------------
  std::vector <Boid*> BoidList;

  private:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief pointer for camera
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Camera *m_cam;


};
#endif // FLOCK_H
