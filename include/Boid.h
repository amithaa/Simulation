/// \file Boid.h
/// \brief
/// \author Amitha Arun
/// \date

#ifndef _BOID_H
#define _BOID_H
#include <vector>
#include <QString>
#include <ngl/Camera.h>




class Boid
{
  public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Constructor for Boid
  //----------------------------------------------------------------------------------------------------------------------
  Boid();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Constructor for Boid
  /// @param[in] x,y and z component of position as well as velocity
  //----------------------------------------------------------------------------------------------------------------------
  Boid(float _positionx, float _positiony, float _positionz, bool isleader);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief dtor
  //----------------------------------------------------------------------------------------------------------------------
  ~Boid();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to get position
  //----------------------------------------------------------------------------------------------------------------------
  inline ngl::Vec3 getposition() {return m_position;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to set position
  //----------------------------------------------------------------------------------------------------------------------
  inline void setposition(float _x, float _y, float _z) {m_position.m_x = _x; m_position.m_y = _y; m_position.m_z = _z;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to set position
  //----------------------------------------------------------------------------------------------------------------------
  inline void setposition(ngl::Vec3 p) {m_position = p;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to get velocity
  //----------------------------------------------------------------------------------------------------------------------
  inline ngl::Vec3 getvelocity() {return m_velocity;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to set velocity
  //----------------------------------------------------------------------------------------------------------------------
  inline void setvelocity(float _x, float _y, float _z) {m_velocity.m_x = _x; m_velocity.m_y = _y; m_velocity.m_z = _z;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to set velocity
  //----------------------------------------------------------------------------------------------------------------------
  inline void setvelocity(ngl::Vec3 v) {m_velocity = v;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to get velocity
  //----------------------------------------------------------------------------------------------------------------------
  inline ngl::Vec3 getacceleration() {return m_acceleration;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to set velocity
  //----------------------------------------------------------------------------------------------------------------------
  inline void setacceleration(float _x, float _y, float _z) {m_acceleration.m_x = _x; m_acceleration.m_y = _y; m_acceleration.m_z = _z;}
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief function to set velocity
  //----------------------------------------------------------------------------------------------------------------------
  inline void setacceleration(ngl::Vec3 v) {m_acceleration = v;}


  private:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the position of the boid
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_position;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief velocity of the boid
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_velocity;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief acceleration of the boid
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_acceleration;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief force applied on the boid
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_force;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief mass of the boid
  //----------------------------------------------------------------------------------------------------------------------
  double m_mass;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief mass of the boid
  //----------------------------------------------------------------------------------------------------------------------
  std::vector <Boid*> m_neighbour;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief leader
  //----------------------------------------------------------------------------------------------------------------------
  bool leader;


};


#endif // _BOID_H
